<feed xmlns="http://www.w3.org/2005/Atom"> <id>/</id><title>weng</title><subtitle>A minimal, portfolio, sidebar, bootstrap Jekyll theme with responsive web design and focuses on text presentation.</subtitle> <updated>2021-06-12T17:47:52+08:00</updated> <author> <name></name> <uri>/</uri> </author><link rel="self" type="application/atom+xml" href="/feed.xml"/><link rel="alternate" type="text/html" hreflang="en-US" href="/"/> <generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator> <rights> © 2021 </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Webpack 测量构建时间</title><link href="/posts/webpack-speed/" rel="alternate" type="text/html" title="Webpack 测量构建时间" /><published>2021-06-12T00:00:00+08:00</published> <updated>2021-06-12T00:00:00+08:00</updated> <id>/posts/webpack-speed/</id> <content src="/posts/webpack-speed/" /> <author> <name></name> </author> <category term="前端" /> <category term="Webpack" /> <summary> speed-measure-webpack-plugin 测量构建时间 优化 webpack 构建速度的第一步是知道将精力集中在哪里。我们可以通过 speed-measure-webpack-plugin 测量你的 webpack 构建期间各个阶段花费的时间： speed-measure-webpack-plugin 使用 speed-measure-webpack-plugin 需要包裹住整个webpackConfig 步骤一：安装 speed-measure-webpack-plugin npm install speed-measure-webpack-plugin --save-dev 步骤二：配置 // 分析打包时间 const SpeedMeasurePlugin = require("speed-measure-webpack-plugin");... </summary> </entry> <entry><title>mock-proxy-server</title><link href="/posts/mock-proxy-server/" rel="alternate" type="text/html" title="mock-proxy-server" /><published>2021-06-12T00:00:00+08:00</published> <updated>2021-06-12T00:00:00+08:00</updated> <id>/posts/mock-proxy-server/</id> <content src="/posts/mock-proxy-server/" /> <author> <name></name> </author> <category term="前端" /> <category term="工具" /> <summary> mock-proxy-server 说明： 项目用于前端开发。 用于对接口做mock，如果没有mock的接口则自动代理转发到服务器 作用： 根据后端提供的接口定义进行mock，前端就可以进入开发，不需要等待后端接口开发完成。等后端接口开发完成后，再切换后端接口联调即可，也可以部分切换。 适用于： 适用于依赖接口开发的场景。 如，在现有项目上，新增功能需要依赖接口的场景。当然也包括新项目。 项目包含两个功能： 对接口做mock 代理请求到服务器 优点： 工具独立于项目，不需要侵入项目 集成mock.js 可以直接代理现有接口到服务器 项目依赖： 项目运行于nodejs环境，基于koa，koa-router，koa-better-http-proxy，Mock 开发。 </summary> </entry> <entry><title>Enable Google Page Views</title><link href="/posts/enable-google-pv/" rel="alternate" type="text/html" title="Enable Google Page Views" /><published>2021-01-04T07:32:00+08:00</published> <updated>2021-01-04T07:32:00+08:00</updated> <id>/posts/enable-google-pv/</id> <content src="/posts/enable-google-pv/" /> <author> <name>Dinesh Prasanth Moluguwan Krishnamoorthy</name> </author> <category term="Blogging" /> <category term="Tutorial" /> <summary> This post is to enable Page Views on the Chirpy theme based blog that you just built. This requires technical knowledge and it’s recommended to keep the google_analytics.pv.* empty unless you have a good reason. If your website has low traffic, the page views count would discourage you to write more blogs. With that said, let’s start with the setup. Set up Google Analytics Create GA account a... </summary> </entry> <entry><title>Customize the Favicon</title><link href="/posts/customize-the-favicon/" rel="alternate" type="text/html" title="Customize the Favicon" /><published>2019-08-11T00:34:00+08:00</published> <updated>2019-08-11T00:34:00+08:00</updated> <id>/posts/customize-the-favicon/</id> <content src="/posts/customize-the-favicon/" /> <author> <name>Cotes Chung</name> </author> <category term="Blogging" /> <category term="Tutorial" /> <summary> The favicons of Chirpy are placed in the directory assets/img/favicons/. You may need to replace them with your own. The following sections will guide you how to create and replace the default favicons. Generate the favicon Prepare a square image (PNG, JPG, or SVG) with a size of 512x512 or more, and then go to the online tool Real Favicon Generator and click button Select your Favicon image ... </summary> </entry> <entry><title>Getting Started</title><link href="/posts/getting-started/" rel="alternate" type="text/html" title="Getting Started" /><published>2019-08-09T20:55:00+08:00</published> <updated>2019-08-09T20:55:00+08:00</updated> <id>/posts/getting-started/</id> <content src="/posts/getting-started/" /> <author> <name>Cotes Chung</name> </author> <category term="Blogging" /> <category term="Tutorial" /> <summary> Prerequisites Follow the Jekyll Docs to complete the installation of Ruby, RubyGems, Jekyll and Bundler. Installation There are two ways to get the theme: Install from RubyGems - Easy to update, isolate irrelevant project files so you can focus on writing. Fork on GitHub - Convenient for custom development, but difficult to update, only suitable for web developers. Installing the The... </summary> </entry> </feed>
